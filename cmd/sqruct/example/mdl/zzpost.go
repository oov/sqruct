// DO NOT EDIT. This file was auto-generated by Sqruct.

package mdl

import (
	"time"

	"github.com/jmoiron/sqlx"
	"github.com/oov/sqruct"
)

// Post represents the following table.
// 	CREATE TABLE post(
// 		id INTEGER PRIMARY KEY,
// 		userid INTEGER NOT NULL,
// 		at DATETIME NOT NULL,
// 		message VARCHAR(8125) NOT NULL,
// 		FOREIGN KEY (userid) REFERENCES user(id) ON DELETE CASCADE
// 	);
type Post struct {
	ID      int64     `mdl:"pk,notnull,uniq,default,autoincr"`
	UserID  int64     `mdl:"fk,notnull"`
	At      time.Time `mdl:"notnull"`
	Message string    `mdl:"notnull"`
}

func GetPost(e sqlx.Ext, id int64) (*Post, error) {
	var t Post
	err := sqlx.Get(e, &t, e.Rebind("SELECT * FROM post WHERE (id = ?)"), id)
	if err != nil {
		return nil, err
	}
	return &t, nil
}

func (t *Post) GetUser(e sqlx.Ext) (*User, error) {
	var ot User
	err := sqlx.Get(e, &ot, e.Rebind("SELECT * FROM user WHERE (id = ?)"), t.UserID)
	if err != nil {
		return nil, err
	}
	return &ot, nil
}

func (t *Post) SelectPostTag(e sqlx.Ext) ([]PostTag, error) {
	var ot []PostTag
	err := sqlx.Select(e, &ot, e.Rebind("SELECT * FROM posttag WHERE (postid = ?)"), t.ID)
	if err != nil {
		return nil, err
	}
	return ot, nil
}

func (t *Post) Insert(e sqlx.Ext) error {
	z := sqruct.IsZero(t.ID)
	r, err := sqlx.NamedExec(e, sqruct.BuildInsertQuery(
		"post",
		[]string{"id", "userid", "at", "message"},
		[]bool{!z, true, true, true},
	), t)
	if err != nil {
		return err
	}
	if z {
		t.ID, err = r.LastInsertId()
		return err
	}
	return nil
}

func (t *Post) Update(e sqlx.Ext) error {
	_, err := sqlx.NamedExec(e, "UPDATE post SET userid = :userid, at = :at, message = :message WHERE (id = :id)", t)
	return err
}

func (t *Post) Delete(e sqlx.Ext) error {
	_, err := sqlx.NamedExec(e, "DELETE FROM post WHERE (id = :id)", t)
	return err
}
