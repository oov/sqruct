// DO NOT EDIT. This file was auto-generated by Sqruct.

package mdl

import (
	"github.com/jmoiron/sqlx"
	"github.com/oov/sqruct"
)

// PostTag represents the following table.
// 	CREATE TABLE posttag(
// 		postid INTEGER NOT NULL,
// 		tagid INTEGER NOT NULL,
// 		FOREIGN KEY (postid) REFERENCES post(id) ON DELETE CASCADE,
// 		FOREIGN KEY (tagid) REFERENCES tag(id) ON DELETE CASCADE,
// 		PRIMARY KEY (postid, tagid)
// 	);
type PostTag struct {
	PostID int64 `mdl:"fk,notnull"`
	TagID  int64 `mdl:"fk,notnull"`
}

func GetPostTag(e sqlx.Ext, postid int64, tagid int64) (*PostTag, error) {
	var t PostTag
	err := sqlx.Get(e, &t, e.Rebind("SELECT * FROM posttag WHERE (postid = ?)AND(tagid = ?)"), postid, tagid)
	if err != nil {
		return nil, err
	}
	return &t, nil
}

func (t *PostTag) GetPost(e sqlx.Ext) (*Post, error) {
	var ot Post
	err := sqlx.Get(e, &ot, e.Rebind("SELECT * FROM post WHERE (id = ?)"), t.PostID)
	if err != nil {
		return nil, err
	}
	return &ot, nil
}

func (t *PostTag) GetTag(e sqlx.Ext) (*Tag, error) {
	var ot Tag
	err := sqlx.Get(e, &ot, e.Rebind("SELECT * FROM tag WHERE (id = ?)"), t.TagID)
	if err != nil {
		return nil, err
	}
	return &ot, nil
}

func (t *PostTag) Insert(e sqlx.Ext) error {

	_, err := sqlx.NamedExec(e, sqruct.BuildInsertQuery(
		"posttag",
		[]string{"postid", "tagid"},
		[]bool{true, true},
	), t)
	if err != nil {
		return err
	}

	return nil
}

func (t *PostTag) Update(e sqlx.Ext) error {
	// PostTag has primary key only
	return nil
}

func (t *PostTag) Delete(e sqlx.Ext) error {
	_, err := sqlx.NamedExec(e, "DELETE FROM posttag WHERE (postid = :postid)AND(tagid = :tagid)", t)
	return err
}
